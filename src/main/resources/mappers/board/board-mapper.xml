<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.realfinal.board.model.mapper.BoardMapper">

	<resultMap type="Board" id="boardListResultMap">
		<id property="board_no" column="BOARD_NO"/>
		<result property="writer_id" column="USER_ID"/>
		<result property="user_nickName" column="USER_NICKNAME"/>
		<result property="writer_no" column="WRITER_NO"/>
		<result property="board_list_no" column="BOARD_LIST_NO"/>
		<result property="board_hit" column="BOARD_HIT"/>
		<result property="board_title" column="BOARD_TITLE"/>
		<result property="board_content" column="BOARD_CONTENT"/>
		<result property="board_register" column="BOARD_REGISTER"/>
		<result property="board_modify" column="BOARD_MODIFY"/>
		<result property="board_originalFileName" column="BOARD_ORIGINALFILENAME"/>
		<result property="board_renamedFileName" column="BOARD_RENAMEDFILENAME"/>
		<result property="reply_cnt" column="REPLY_CNT"/>
		
	</resultMap>
	
	<resultMap type="Board" id="boardDetailResultMap" extends="boardListResultMap">
		<collection property="replies" javaType="arrayList" columnPrefix="R_" resultMap="boardReplyResultMap"/>
	</resultMap>
	
	<resultMap type="Reply" id="boardReplyResultMap">
		<id property="reply_no" column="REPLY_NO"/>
		<result property="reply_content" column="REPLY_CONTENT"/>
		<result property="board_no" column="BOARD_NO"/>
		<result property="reply_writer_no" column="REPLY_WRITER_NO"/>
		<result property="reply_writer_nickName" column="USER_NICKNAME"/>
		<result property="reply_writer_id" column="USER_ID"/>
		<result property="reply_register" column="REPLY_REGISTER"/>
		<result property="reply_modify" column="REPLY_MODIFY"/>
	</resultMap>

	<sql id="selectBoardSql">
		SELECT
			BOARD_NO, WRITER_NO, BOARD_LIST_NO, BOARD_HIT, 
			BOARD_TITLE, BOARD_CONTENT, BOARD_REGISTER, BOARD_MODIFY, 
			BOARD_ORIGINALFILENAME, BOARD_RENAMEDFILENAME, BOARD_STATUS
		FROM BOARD
	</sql>
	
	<sql id="selectReplySql">
		SELECT
			REPLY_NO, REPLY_CONTENT, WRITER_NO, 
			BOARD_NO, REPLY_REGISTER, REPLY_MODIFY
		FROM REPLY
	</sql>
	
	<!-- 갯수 -->
	<select id="selectBoardCount" resultType="int"  parameterType="map">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN USER_T U ON(B.WRITER_NO = U.USER_NO)
		WHERE B.BOARD_STATUS = 'Y'
		<if test="board_list_no != null and !board_list_no.equals('')">
			AND B.BOARD_LIST_NO = #{board_list_no}
		</if>
		<!-- WHERE 1=1 참인 경우 -->
		<if test="writerKeyword != null">
			AND U.USER_NO LIKE '%'||#{writerKeyword}||'%'
		</if>
		<if test="titleKeyword != null">
			AND B.BOARD_TITLE LIKE '%'||#{titleKeyword}||'%'
		</if>
		<if test="contentKeyword != null">
			AND B.BOARD_CONTENT LIKE '%'||#{contentKeyword}||'%'
		</if>
		ORDER BY B.BOARD_NO DESC
	</select>
	
	<!-- 카테고리별 게시판 목록  -->
	<select id="selectBoardList" resultMap="boardListResultMap"  parameterType="map">
		SELECT  B.BOARD_NO,
		        B.BOARD_TITLE, 
		        U.USER_NICKNAME, 
		        B.BOARD_HIT, 
		        B.BOARD_LIST_NO, 
		        B.BOARD_ORIGINALFILENAME, 
		        B.BOARD_RENAMEDFILENAME, 
		        B.BOARD_CONTENT,
		        B.BOARD_REGISTER, 
		        B.BOARD_MODIFY, 
		        (SELECT COUNT(1) 
		        FROM REPLY R 
		        WHERE R.BOARD_NO = B.BOARD_NO ) AS REPLY_CNT
		FROM BOARD B
		JOIN USER_T U ON(B.WRITER_NO = U.USER_NO)
		WHERE B.BOARD_STATUS = 'Y'
		<if test="board_list_no != null and !board_list_no.equals('')">
			AND B.BOARD_LIST_NO = #{board_list_no} 
		</if>
		<if test="titleKeyword != null">
			AND B.BOARD_TITLE LIKE '%'||#{titleKeyword}||'%'
		</if>
		ORDER BY B.BOARD_NO DESC
	</select>
	
	<!-- 메인인기글 목록 : 현재시간 기준 2일 미만의 글, 최다 조회수 -->
	<!-- 메인 인기글 -->
	<select id="selectBoardListMain" resultMap="boardListResultMap"  parameterType="map">
		SELECT  B.BOARD_NO,
		        B.BOARD_TITLE, 
		        U.USER_NICKNAME, 
		        B.BOARD_HIT, 
		        B.BOARD_LIST_NO, 
		        B.BOARD_ORIGINALFILENAME, 
		        B.BOARD_RENAMEDFILENAME, 
		        B.BOARD_CONTENT,
		        B.BOARD_REGISTER, 
		        B.BOARD_MODIFY, 
		        (SELECT COUNT(1) 
		        FROM REPLY R 
		        WHERE R.BOARD_NO = B.BOARD_NO ) AS REPLY_CNT
		FROM BOARD B
		JOIN USER_T U ON(B.WRITER_NO = U.USER_NO)
		WHERE B.BOARD_STATUS = 'Y'
		ORDER BY B.BOARD_NO DESC
	</select>
	
	<!-- 사이드 커뮤니티 인기글 -->
	<!-- 부동산메인 2개 -->
	<select id="sideBoardForEstate" resultMap="boardListResultMap"  parameterType="map">
		SELECT REALESTATE.*
		FROM (
		    SELECT
		        B.BOARD_TITLE,
		        B.WRITER_NO,
		        B.BOARD_REGISTER,
		        U.USER_NICKNAME
		    FROM BOARD B
		    JOIN USER_T U ON(B.WRITER_NO = U.USER_NO)
		    WHERE B.BOARD_STATUS='Y'
		    AND B.BOARD_LIST_NO = 2
		    ORDER BY B.BOARD_REGISTER DESC
		    ) REALESTATE
		WHERE ROWNUM <![CDATA[<=]]> 2
	</select>
	<!-- 메인, 정치 국회의원현황 6개 / 커뮤니티상세 5개 -->
	
	<!-- 게시글 보기 -->
	<select id="selectBoardByNo" parameterType="int" resultMap="boardDetailResultMap">
		SELECT 
		    B.BOARD_NO, B.BOARD_TITLE, U.USER_NICKNAME, U2.USER_NICKNAME AS R_USER_NICKNAME,
		    B.BOARD_HIT, B.BOARD_ORIGINALFILENAME, B.BOARD_RENAMEDFILENAME, B.BOARD_CONTENT,
		    B.BOARD_LIST_NO, B.BOARD_REGISTER, B.BOARD_MODIFY, 
		    R.REPLY_NO AS R_REPLY_NO, R.BOARD_NO AS R_BOARD_NO, R.REPLY_CONTENT AS R_REPLY_CONTENT, 
		    U2.USER_ID AS R_USER_ID, R.REPLY_REGISTER AS R_REPLY_REGISTER, R.REPLY_MODIFY AS R_REPLY_MODIFY,
		    (SELECT COUNT(1) 
		        FROM REPLY R 
		        WHERE R.BOARD_NO = B.BOARD_NO ) AS REPLY_CNT
		FROM BOARD B
		JOIN USER_T U ON(B.WRITER_NO = U.USER_NO)
		LEFT OUTER JOIN REPLY R ON(B.BOARD_NO = R.BOARD_NO)
		LEFT OUTER JOIN USER_T U2 ON(R.WRITER_NO = U2.USER_NO)
		WHERE B.BOARD_STATUS='Y' 
		AND B.BOARD_NO = #{board_no}
		ORDER BY R.REPLY_REGISTER DESC
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="Board">
		INSERT INTO BOARD (
			BOARD_NO, 
			WRITER_NO, 
			BOARD_LIST_NO, 
			BOARD_HIT, 
			BOARD_TITLE, 
			BOARD_CONTENT, 
			BOARD_REGISTER, 
			BOARD_MODIFY, 
			BOARD_ORIGINALFILENAME, 
			BOARD_RENAMEDFILENAME, 
			BOARD_STATUS
		) VALUES (
			SEQ_BOARD_NO.NEXTVAL, 
			#{writer_no}, 
			#{board_list_no}, 
			0, 
			#{board_title}, 
			#{board_content}, 
			SYSDATE, 
			SYSDATE, 
			NVL(#{board_originalFileName},''), 
			NVL(#{board_renamedFileName},''), 
			DEFAULT
		)
		<selectKey keyProperty="board_no" resultType="int" order="AFTER">
    		SELECT SEQ_BOARD_NO.CURRVAL FROM DUAL
    	</selectKey>
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="updateHit" parameterType="int">
		UPDATE BOARD 
		SET BOARD_HIT = #{board_hit}
		WHERE BOARD_NO = #{board_no}
	</update>
	
	<!-- 게시글 수정 -->
	<update id="BoardUpdate">
		UPDATE BOARD 
		SET BOARD_TITLE = #{board_title}, 
			BOARD_CONTENT = #{board_content}, 
			BOARD_LIST_NO = #{board_list_no}, 
			<if test="board_originalFileName != null">
			BOARD_ORIGINALFILENAME = #{board_originalFileName}, 
			</if>
			<if test="board_renamedFileName != null">
			BOARD_RENAMEDFILENAME = #{board_renamedFileName},
			</if>
			BOARD_MODIFY = SYSDATE
		WHERE BOARD_NO = #{board_no} 
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="deleteBoard" parameterType="int">
		UPDATE BOARD SET STATUS='N' WHERE BOARD_NO = #{board_no}
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="Reply">
		INSERT INTO REPLY 
		(REPLY_NO,REPLY_CONTENT,WRITER_NO,BOARD_NO,REPLY_REGISTER,REPLY_MODIFY)
			VALUES(
				SEQ_REPLY_NO.NEXTVAL, #{reply_content}, #{reply_writer_no}, 
				#{board_no}, SYSDATE, SYSDATE)
	</insert>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="int">
		DELETE REPLY WHERE BOARD_NO = #{board_no} 
	</delete>

</mapper>